<Type Name="CustomXMLNode" FullName="Microsoft.Office.Core.CustomXMLNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf745aff799d7f2e6ef599bbb549cfbdeb5ce457" />
    <Meta Name="ms.sourcegitcommit" Value="f41bc3cdd2c00b9a51a4340ac823a9e309633924" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20663155" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface CustomXMLNode : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CustomXMLNode implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core.CustomXMLNode" />
  <TypeSignature Language="VB.NET" Value="Public Interface CustomXMLNode&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class CustomXMLNode : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000CDB04-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1c66b-101">Representa un nodo XML en un árbol de un documento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c66b-101">Represents an XML node in a tree in a document.</span>
      </span>
      <span data-ttu-id="1c66b-102">El <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> objeto es un miembro de la <see cref="T:Microsoft.Office.Core.CustomXMLNodes" /> colección.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c66b-102">The <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object is a member of the <see cref="T:Microsoft.Office.Core.CustomXMLNodes" /> collection.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="1c66b-103">
        <para>El <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> objeto está diseñado para tener paridad funcional con la interfaz <b>IXMLDOMNode</b> . Además, contiene un <see cref="P:Microsoft.Office.Core.CustomXMLNode.XPath" /> propiedad que es una gran mejora sobre los objetos proporcionados por MSXML.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="1c66b-103">
          <para>The <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object is designed to have funtional parity with the <b>IXMLDOMNode</b> interface. In addition, it contains an <see cref="P:Microsoft.Office.Core.CustomXMLNode.XPath" /> property which is a great improvement over the objects  provided by MSXML.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendChildNode">
      <MemberSignature Language="C#" Value="public void AppendChildNode (string Name = &quot;&quot;, string NamespaceURI = &quot;&quot;, Microsoft.Office.Core.MsoCustomXMLNodeType NodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, string NodeValue = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChildNode([in]string Name, [in]string NamespaceURI, [in]valuetype Microsoft.Office.Core.MsoCustomXMLNodeType NodeType, [in]string NodeValue) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.AppendChildNode(System.String,System.String,Microsoft.Office.Core.MsoCustomXMLNodeType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChildNode (Optional Name As String = &quot;&quot;, Optional NamespaceURI As String = &quot;&quot;, Optional NodeType As MsoCustomXMLNodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, Optional NodeValue As String = &quot;&quot;)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809363)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NamespaceURI" Type="System.String" />
        <Parameter Name="NodeType" Type="Microsoft.Office.Core.MsoCustomXMLNodeType" />
        <Parameter Name="NodeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="1c66b-104">Representa el nombre base del elemento que se va a anexar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-104">Represents the base name of the element to be appended.</span>
          </span>
        </param>
        <param name="NamespaceURI">
          <span data-ttu-id="1c66b-105">Representa el espacio de nombres del elemento que se va a anexar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-105">Represents the namespace of the element to be appended.</span>
          </span>
          <span data-ttu-id="1c66b-106">Este parámetro es obligatorio para anexar nodos del tipo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> o <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, en caso contrario, se pasa por alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-106">This parameter is required to append nodes of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> or <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, otherwise it is ignored.</span>
          </span>
        </param>
        <param name="NodeType">
          <span data-ttu-id="1c66b-107">Especifica el tipo de nodo que se anexará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-107">Specifies the type of node to append.</span>
          </span>
          <span data-ttu-id="1c66b-108">Si no se especifica el parámetro, se supone que es del tipo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-108">If the parameter is not specified, it is assumed to be of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          </span>
        </param>
        <param name="NodeValue">
          <span data-ttu-id="1c66b-p104">Se utiliza para establecer el valor del nodo anexado para aquellos nodos que permiten texto. Si el nodo no permite texto, se omite el parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p104">Used to set the value of the appended node for those nodes that allow text. If the node doesn’t allow text, the parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c66b-111">Anexa un nodo único como último secundario en el nodo de elemento de contexto del árbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-111">Appends a single node as the last child under the context element node in the tree.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="1c66b-112">
            <para>Si el nodo de contexto es cualquier tipo distinto de <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, o si la operación diese como resultado una estructura de árbol no válida, la anexión no se lleva a cabo y se muestra un mensaje de error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-112">
              <para>If the context node is any type other than <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, or if the operation would result in an invalid tree structure, the append is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChildSubtree">
      <MemberSignature Language="C#" Value="public void AppendChildSubtree (string XML);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChildSubtree([in]string XML) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.AppendChildSubtree(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChildSubtree (XML As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChildSubtree(System::String ^ XML);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809364)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="XML">
          <span data-ttu-id="1c66b-113">Representa el subárbol que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-113">Represents the subtree to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c66b-114">Agrega un subárbol como último secundario en el nodo de elemento de contexto del árbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-114">Adds a subtree as the last child under the context element node in the tree.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="1c66b-115">
            <para>Si el nodo de contexto es cualquier tipo distinto de <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, no se realiza la operación de anexión y se muestra un mensaje de error.  Si el <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> se valida con respecto a un esquema y si la operación diese como resultado una estructura de árbol no válida, no se realiza la operación de anexión y se muestra un mensaje de error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-115">
              <para>If the context node is any type other than <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, the append operation is not performed and an error message is displayed.  If the <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> is being validated against a schema and if the operation would result in an invalid tree structure,  the append operation is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-116">Obtiene un objeto <b>Application</b> que representa la aplicación contenedora para un <see cref="T:Microsoft.Office.Core.CustomXMLNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-116">Gets an <b>Application</b> object that represents the container application for a <see cref="T:Microsoft.Office.Core.CustomXMLNode" />.</span>
          </span>
          <span data-ttu-id="1c66b-117">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-117">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-118">
            <b>Object</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-118">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNodes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNodes Attributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As CustomXMLNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNodes ^ Attributes { Microsoft::Office::Core::CustomXMLNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-119">Obtiene un <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> colección que representa los atributos del elemento actual en el nodo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-119">Gets a <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> collection representing the attributes of the current element in the current node.</span>
          </span>
          <span data-ttu-id="1c66b-120">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-120">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNodes" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseName">
      <MemberSignature Language="C#" Value="public string BaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.BaseName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p107">Obtiene el nombre base del nodo sin el prefijo del espacio de nombres, si hay alguno, en el modelo de objetos de documento (DOM). Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p107">Gets the base name of the node without the namespace prefix, if one exists, in the Document Object Model (DOM). Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-123">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-123">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1c66b-124">
            <para>Esto es el miembro predeterminado de <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> objeto.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-124">
              <para>This is the default member of <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNodes ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNodes ChildNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As CustomXMLNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNodes ^ ChildNodes { Microsoft::Office::Core::CustomXMLNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809347)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-125">Obtiene un <see cref="T:Microsoft.Office.Core.CustomXMLNodes" /> colección que contiene todos los elementos secundarios del nodo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-125">Gets a <see cref="T:Microsoft.Office.Core.CustomXMLNodes" /> collection containing all of the child elements of the current node.</span>
          </span>
          <span data-ttu-id="1c66b-126">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-126">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNodes" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-127">Obtiene un entero de 32 bits que indica la aplicación en la que el <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-127">Gets a 32-bit integer that indicates the application in which the <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object  was created.</span>
          </span>
          <span data-ttu-id="1c66b-128">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-128">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-129">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-129">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809365)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-130">Elimina el nodo actual del árbol (incluidos todos sus elementos secundarios, si los tiene).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-130">Deletes the current node from the tree (including all of its children, if any exist).</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="1c66b-131">
            <para>Si la operación diese como resultado una estructura de árbol no válida, la eliminación no se lleva a cabo y se muestra un mensaje de error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-131">
              <para>If the operation would result in an invalid tree structure, the deletion is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ FirstChild { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-132">Obtiene un <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> objeto correspondiente al primer elemento secundario del nodo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-132">Gets a <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object corresponding to the first child element of the current node.</span>
          </span>
          <span data-ttu-id="1c66b-133">Si el nodo no tiene elementos secundarios (o si no es del tipo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />), devuelve <b>Nothing</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-133">If the node has no child elements (or if it isn’t of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />), returns <b>Nothing</b>.</span>
          </span>
          <span data-ttu-id="1c66b-134">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-134">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public bool HasChildNodes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasChildNodes() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Function HasChildNodes () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasChildNodes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809366)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-135">Devuelve <b>True</b> si el nodo de elemento actual tiene nodos de elementos secundarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-135">Returns <b>True</b> if the current element node has child element nodes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c66b-136">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-136">
              <b>Boolean</b>
            </span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="1c66b-137">
            <para>Este método siempre devolverá <b>False</b> cuando <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> no es del tipo de nodo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-137">
              <para>This method will always return <b>False</b> when <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> isn’t of node type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertNodeBefore">
      <MemberSignature Language="C#" Value="public void InsertNodeBefore (string Name = &quot;&quot;, string NamespaceURI = &quot;&quot;, Microsoft.Office.Core.MsoCustomXMLNodeType NodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, string NodeValue = &quot;&quot;, Microsoft.Office.Core.CustomXMLNode NextSibling = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertNodeBefore([in]string Name, [in]string NamespaceURI, [in]valuetype Microsoft.Office.Core.MsoCustomXMLNodeType NodeType, [in]string NodeValue, [in]class Microsoft.Office.Core.CustomXMLNode NextSibling) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.InsertNodeBefore(System.String,System.String,Microsoft.Office.Core.MsoCustomXMLNodeType,System.String,Microsoft.Office.Core.CustomXMLNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertNodeBefore (Optional Name As String = &quot;&quot;, Optional NamespaceURI As String = &quot;&quot;, Optional NodeType As MsoCustomXMLNodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, Optional NodeValue As String = &quot;&quot;, Optional NextSibling As CustomXMLNode = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809367)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NamespaceURI" Type="System.String" />
        <Parameter Name="NodeType" Type="Microsoft.Office.Core.MsoCustomXMLNodeType" />
        <Parameter Name="NodeValue" Type="System.String" />
        <Parameter Name="NextSibling" Type="Microsoft.Office.Core.CustomXMLNode" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="1c66b-138">Representa el nombre base del nodo que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-138">Represents the base name of the node to be added.</span>
          </span>
        </param>
        <param name="NamespaceURI">
          <span data-ttu-id="1c66b-139">Representa el espacio de nombres del elemento que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-139">Represents the namespace of the element to be added.</span>
          </span>
          <span data-ttu-id="1c66b-140">Este parámetro es obligatorio si se agregan nodos del tipo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> o <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, en caso contrario, se pasa por alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-140">This parameter is required if adding nodes of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> or <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, otherwise it is ignored.</span>
          </span>
        </param>
        <param name="NodeType">
          <span data-ttu-id="1c66b-141">Especifica el tipo del nodo que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-141">Specifies the type of the node to be added.</span>
          </span>
          <span data-ttu-id="1c66b-142">Si no se especifica el parámetro, se supone que es un nodo de tipo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-142">If the parameter is not specified, it is assumed to be a node of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          </span>
        </param>
        <param name="NodeValue">
          <span data-ttu-id="1c66b-p113">Se utiliza para establecer el valor del nodo que se va a agregar para aquellos nodos que permiten texto. Si el nodo no permite texto, se omite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p113">Used to set the value of the  node to be added for those nodes that allow text. If the node doesn’t allow text, the parameter is ignored.</span>
          </span>
        </param>
        <param name="NextSibling">
          <span data-ttu-id="1c66b-145">Representa el nodo de contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-145">Represents the context node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c66b-146">Inserta un nuevo nodo justo antes del nodo de contexto en el árbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-146">Inserts a new node just before the context node in the tree.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="1c66b-147">
            <para>Si el nodo de contexto no está presente cuando se agrega un nodo de tipo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeComment" />, o <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeProcessingInstruction" />, el nuevo nodo se agrega al último secundario del nodo de contexto. Si la operación diese como resultado una estructura de árbol no válida, la inserción no se realiza y se muestra un mensaje de error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-147">
              <para>If the context node is not present when adding a node of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />, <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeComment" />, or <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeProcessingInstruction" />, the new node is added to the last child of the context node. If the operation would result in an invalid tree structure, the insertion is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertSubtreeBefore">
      <MemberSignature Language="C#" Value="public void InsertSubtreeBefore (string XML, Microsoft.Office.Core.CustomXMLNode NextSibling = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertSubtreeBefore([in]string XML, [in]class Microsoft.Office.Core.CustomXMLNode NextSibling) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.InsertSubtreeBefore(System.String,Microsoft.Office.Core.CustomXMLNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertSubtreeBefore (XML As String, Optional NextSibling As CustomXMLNode = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809368)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
        <Parameter Name="NextSibling" Type="Microsoft.Office.Core.CustomXMLNode" />
      </Parameters>
      <Docs>
        <param name="XML">
          <span data-ttu-id="1c66b-148">Representa el subárbol que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-148">Represents the subtree to be added.</span>
          </span>
        </param>
        <param name="NextSibling">
          <span data-ttu-id="1c66b-149">Especifica el nodo de contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-149">Specifies the context node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c66b-150">Inserta el subárbol especificado en la ubicación justo antes del nodo de contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-150">Inserts the specified subtree into the location just before the context node.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="1c66b-151">
            <para>Si el <paramref name="NextSibling" /> parámetro no es un elemento secundario del nodo de contexto o si la operación diese como resultado una estructura de árbol no válida, la inserción no se realiza y se muestra un mensaje de error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-151">
              <para>If the <paramref name="NextSibling" /> parameter is not a child of the context node or if the operation would result in an invalid tree structure, the insertion is not performed and an error message is displayed. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode LastChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastChild As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ LastChild { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809349)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-152">Obtiene un <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> objeto correspondiente al último elemento secundario del nodo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-152">Gets a <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object corresponding to the last child element of the current node.</span>
          </span>
          <span data-ttu-id="1c66b-153">Si el nodo no tiene elementos secundarios (o si no es del tipo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />), la propiedad devuelve <b>Nothing</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-153">If the node has no child elements (or if it is not of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />), the property returns <b>Nothing</b>.</span>
          </span>
          <span data-ttu-id="1c66b-154">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-154">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809350)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-155">Obtiene el identificador de dirección única para el espacio de nombres de la <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-155">Gets  the unique address identifier for the namespace of the <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object.</span>
          </span>
          <span data-ttu-id="1c66b-156">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-156">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-157">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-157">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSibling As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ NextSibling { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809351)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p116">Obtiene el siguiente nodo relacionado (elemento, comentario o instrucción de procesamiento) del nodo actual. Si el nodo es el último elemento relacionado a su nivel, la propiedad devuelve <b>Nothing</b>. Es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p116">Gets the next sibling node (element, comment, or processing instruction) of the current node. If the node is the last sibling at its level, the property returns <b>Nothing</b>. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoCustomXMLNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoCustomXMLNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeType As MsoCustomXMLNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoCustomXMLNodeType NodeType { Microsoft::Office::Core::MsoCustomXMLNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809352)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoCustomXMLNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p117">Obtiene el tipo del nodo actual. Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p117">Gets the type of the current node. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoCustomXMLNodeType" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeValue">
      <MemberSignature Language="C#" Value="public string NodeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NodeValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.NodeValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NodeValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809353)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809353)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809353)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p118">Obtiene o establece el valor del nodo actual. Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p118">Gets or sets the value of the current node. Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-165">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-165">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public object OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerDocument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OwnerDocument { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809355)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809355)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-166">Obtiene el objeto que representa el libro de Microsoft Office Excel, presentación de Microsoft Office PowerPoint o el documento de Microsoft Office Word asociado a este nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-166">Gets the object representing the Microsoft Office Excel workbook, Microsoft Office PowerPoint presentation, or the Microsoft Office Word document associated with this node.</span>
          </span>
          <span data-ttu-id="1c66b-167">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-167">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-168">
            <b>Object</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-168">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerPart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLPart OwnerPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLPart OwnerPart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.OwnerPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerPart As CustomXMLPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLPart ^ OwnerPart { Microsoft::Office::Core::CustomXMLPart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809356)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p120">Obtiene el objeto que representa la parte asociada a este nodo. Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p120">Gets the object representing the part associated with this node. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core._CustomXMLPart" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-171">Obtiene el objeto primario para el <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-171">Gets the parent object for the <see cref="T:Microsoft.Office.Core.CustomXMLNode" /> object.</span>
          </span>
          <span data-ttu-id="1c66b-172">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-172">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-173">
            <b>Object</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-173">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNode As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ ParentNode { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809358)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809358)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p122">Obtiene al elemento primario de nodo de elemento del nodo actual. Si el nodo actual está en el nivel de raíz, la propiedad devuelve <b>Nothing</b>. Es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p122">Gets the parent element node of the current node. If the current node is at the root level, the property returns <b>Nothing</b>. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSibling As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLNode ^ PreviousSibling { Microsoft::Office::Core::CustomXMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809357)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p123">Obtiene el anterior nodo relacionado (elemento, comentario o instrucción de procesamiento) del nodo actual. Si el nodo actual es el primer elemento relacionado a su nivel, la propiedad devuelve <b>Nothing</b>. Es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p123">Gets the previous sibling node (element, comment, or processing instruction) of the current node. If the current node is the first sibling at its level, the property returns <b>Nothing</b>. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Microsoft.Office.Core.CustomXMLNode Child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveChild([in]class Microsoft.Office.Core.CustomXMLNode Child) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.RemoveChild(Microsoft.Office.Core.CustomXMLNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveChild (Child As CustomXMLNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveChild(Microsoft::Office::Core::CustomXMLNode ^ Child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809369)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Child" Type="Microsoft.Office.Core.CustomXMLNode" />
      </Parameters>
      <Docs>
        <param name="Child">
          <span data-ttu-id="1c66b-180">Representa el nodo secundario del nodo de contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-180">Represents the child node of the context node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c66b-181">Elimina el nodo secundario especificado del árbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-181">Removes the specified child node from the tree.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="1c66b-182">
            <para>Si el nodo especificado en el <paramref name="Child" /> parámetro no es un elemento secundario del nodo de contexto o si la acción diese como resultado un árbol no válido, la eliminación no se lleva a cabo y se muestra un mensaje de error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-182">
              <para>If the node specified in the <paramref name="Child" /> parameter is not a child of the context node or if the action would result in an invalid tree, the removal is not performed and an error message is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChildNode">
      <MemberSignature Language="C#" Value="public void ReplaceChildNode (Microsoft.Office.Core.CustomXMLNode OldNode, string Name = &quot;&quot;, string NamespaceURI = &quot;&quot;, Microsoft.Office.Core.MsoCustomXMLNodeType NodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, string NodeValue = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceChildNode([in]class Microsoft.Office.Core.CustomXMLNode OldNode, [in]string Name, [in]string NamespaceURI, [in]valuetype Microsoft.Office.Core.MsoCustomXMLNodeType NodeType, [in]string NodeValue) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.ReplaceChildNode(Microsoft.Office.Core.CustomXMLNode,System.String,System.String,Microsoft.Office.Core.MsoCustomXMLNodeType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceChildNode (OldNode As CustomXMLNode, Optional Name As String = &quot;&quot;, Optional NamespaceURI As String = &quot;&quot;, Optional NodeType As MsoCustomXMLNodeType = Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement, Optional NodeValue As String = &quot;&quot;)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809370)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldNode" Type="Microsoft.Office.Core.CustomXMLNode" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NamespaceURI" Type="System.String" />
        <Parameter Name="NodeType" Type="Microsoft.Office.Core.MsoCustomXMLNodeType" />
        <Parameter Name="NodeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldNode">
          <span data-ttu-id="1c66b-183">Representa el nodo secundario que se va a sustituir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-183">Represents the child node to be replaced.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="1c66b-184">Representa el nombre base del elemento que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-184">Represents the base name of the element to be added.</span>
          </span>
        </param>
        <param name="NamespaceURI">
          <span data-ttu-id="1c66b-185">Representa el espacio de nombres del elemento que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-185">Represents the namespace of the element to be added.</span>
          </span>
          <span data-ttu-id="1c66b-186">Este parámetro es obligatorio si se agregan nodos del tipo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> o <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, en caso contrario, se pasa por alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-186">This parameter is required if adding nodes of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" /> or <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeAttribute" />, otherwise it is ignored.</span>
          </span>
        </param>
        <param name="NodeType">
          <span data-ttu-id="1c66b-187">Especifica el tipo de nodo que agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-187">Specifies the type of node to add.</span>
          </span>
          <span data-ttu-id="1c66b-188">Si no se especifica el parámetro, se supone que es del tipo <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-188">If the parameter is not specified, it is assumed to be of type <see cref="F:Microsoft.Office.Core.MsoCustomXMLNodeType.msoCustomXMLNodeElement" />.</span>
          </span>
        </param>
        <param name="NodeValue">
          <span data-ttu-id="1c66b-p126">Se utiliza para establecer el valor del nodo que se va a agregar para aquellos nodos que permiten texto. Si el nodo no permite texto, se omite el parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p126">Used to set the value of the node to be added for those nodes that allow text. If the node doesn’t allow text, the parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c66b-191">Elimina el nodo secundario especificado (y su subárbol) del árbol principal y lo sustituye por un nodo distinto en la misma ubicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-191">Removes the specified child node (and its subtree) from the main tree, and replaces it with a different  node in the same location.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="1c66b-192">
            <para>Si el <paramref name="OldNode" /> parámetro no es un elemento secundario del nodo de contexto o si la operación diese como resultado una estructura de árbol no válida, no se realiza la sustitución y se muestra un mensaje de error. Además, en un caso donde el nodo que se va a agregar ya existe, no se realiza la sustitución y se muestra un mensaje de error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-192">
              <para>If the <paramref name="OldNode" /> parameter is not a child of the context node  or if the operation would result in an invalid tree structure, the replacement is not performed and an error message is displayed. In addition, in a case where the node to be added already exists, the replacement is not performed and an error message is displayed. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChildSubtree">
      <MemberSignature Language="C#" Value="public void ReplaceChildSubtree (string XML, Microsoft.Office.Core.CustomXMLNode OldNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceChildSubtree([in]string XML, [in]class Microsoft.Office.Core.CustomXMLNode OldNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.ReplaceChildSubtree(System.String,Microsoft.Office.Core.CustomXMLNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceChildSubtree (XML As String, OldNode As CustomXMLNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceChildSubtree(System::String ^ XML, Microsoft::Office::Core::CustomXMLNode ^ OldNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809371)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
        <Parameter Name="OldNode" Type="Microsoft.Office.Core.CustomXMLNode" />
      </Parameters>
      <Docs>
        <param name="XML">
          <span data-ttu-id="1c66b-193">Representa el subárbol que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-193">Represents the subtree to be added.</span>
          </span>
        </param>
        <param name="OldNode">
          <span data-ttu-id="1c66b-194">Representa el nodo secundario que se va a sustituir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-194">Represents the child node to be replaced.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c66b-195">Elimina el nodo especificado (y su subárbol) del árbol principal y lo sustituye por un subárbol distinto en la misma ubicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-195">Removes the specified node (and its subtree) from the main tree, and replaces it with a different subtree in the same location.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="1c66b-196">
            <para>Si la operación diese como resultado una estructura de árbol no válida, no se realiza la operación de sustitución y se muestra un mensaje de error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-196">
              <para>If the operation would result in an invalid tree  structure, the replacement operation is not performed and an error message is displayed. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNodes SelectNodes (string XPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CustomXMLNodes SelectNodes([in]string XPath) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (XPath As String) As CustomXMLNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::CustomXMLNodes ^ SelectNodes(System::String ^ XPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809372)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNodes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="1c66b-197">Contiene una expresión XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-197">Contains an XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c66b-198">Selecciona una colección de nodos que coinciden con una expresión XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-198">Selects a collection of nodes matching an XPath expression.</span>
          </span>
          <span data-ttu-id="1c66b-199">Este método difiere de la <see cref="M:Microsoft.Office.Core._CustomXMLPart.SelectNodes(System.String)" /> método en que la expresión XPath se evaluará comenzando por el nodo de 'expresión' como nodo de contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-199">This method differs from the <see cref="M:Microsoft.Office.Core._CustomXMLPart.SelectNodes(System.String)" /> method in that the XPath expression will be evaluated starting with the 'expression' node as the context node.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.CustomXMLNodes" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLNode SelectSingleNode (string XPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CustomXMLNode SelectSingleNode([in]string XPath) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.CustomXMLNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (XPath As String) As CustomXMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::CustomXMLNode ^ SelectSingleNode(System::String ^ XPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="1c66b-200">Contiene una expresión XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-200">Contains an XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c66b-201">Selecciona un nodo único desde una colección que coincide con una expresión XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-201">Selects a single node from a collection matching an XPath expression.</span>
          </span>
          <span data-ttu-id="1c66b-202">Este método difiere de la <see cref="M:Microsoft.Office.Core._CustomXMLPart.SelectSingleNode(System.String)" /> método en que la expresión XPath se evaluará comenzando por el nodo de 'expresión' como nodo de contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-202">This method differs from the <see cref="M:Microsoft.Office.Core._CustomXMLPart.SelectSingleNode(System.String)" /> method in that the XPath expression will be evaluated starting with the 'expression' node as the context node.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.CustomXMLNode" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809359)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809359)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809359)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p129">Obtiene o establece el texto del nodo actual. Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p129">Gets or sets the text for the current node. Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-205">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-205">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public string XML { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.XML" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XML { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809362)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p130">Obtiene la representación XML del nodo actual y de sus nodos secundarios, si existen. Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p130">Gets the XML representation of the current node and its children, if any exist. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-208">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-208">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.CustomXMLNode.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c66b-p131">Obtiene una <b>cadena</b> con la propiedad XPath canónica del nodo actual. Si el nodo ya no está en el modelo de objetos de documento (DOM), la propiedad devuelve un mensaje de error. Es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-p131">Gets a <b>String</b> with the canonicalized XPath for the current node. If the node is no longer in the Document Object Model (DOM), the property returns an error message. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c66b-212">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1c66b-212">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>