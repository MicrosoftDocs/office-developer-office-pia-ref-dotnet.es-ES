<Type Name="_CommandBars" FullName="Microsoft.Office.Core._CommandBars">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3690a288cdc35a5dc583d70da726bfd1516db3f6" />
    <Meta Name="ms.sourcegitcommit" Value="f41bc3cdd2c00b9a51a4340ac823a9e309633924" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20663252" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _CommandBars : Microsoft.Office.Core._IMsoDispObj, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _CommandBars implements class Microsoft.Office.Core._IMsoDispObj, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core._CommandBars" />
  <TypeSignature Language="VB.NET" Value="Public Interface _CommandBars&#xA;Implements _IMsoDispObj, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class _CommandBars : Microsoft::Office::Core::_IMsoDispObj, System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C0302-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="378ea-101">Una colección de <see cref="T:Microsoft.Office.Core.CommandBar" /> objetos que representan las barras de comandos de la aplicación contenedora.</span>
      <span class="sxs-lookup">
        <span data-stu-id="378ea-101">A collection of <see cref="T:Microsoft.Office.Core.CommandBar" /> objects that represent the command bars in the container application.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="378ea-102">
        <para>Usar el <see cref="P:Microsoft.Office.Core.MsoEnvelopeClass.CommandBars" /> (propiedad) para devolver la colección <b>CommandBars</b> .</para>
        <para>Usar la <see cref="M:Microsoft.Office.Core._CommandBars.Add(System.Object,System.Object,System.Object,System.Object)" /> método para agregar una nueva barra de comandos a la colección.</para>
        <para>Uso <b>CommandBars</b>(<paramref name="index" />) (en Visual Basic.NET) o <b>CommandBars</b>[<paramref name="index" />] (C#), donde <paramref name="index" /> es el nombre o número de índice de una barra de comandos, para devolver un solo objeto <b>CommandBar</b> .</para>
        <para>
          <b>Nota</b>: puede usar el nombre o número de índice para especificar una barra de menús o la barra de herramientas en la lista de barras de menús disponibles y barras de herramientas de la aplicación contenedora. Sin embargo, debe usar el nombre para especificar un menú, menú contextual o submenú (todas las cuales se representan mediante objetos <b>CommandBar</b> ). Si dos o más menús o submenús personalizados tienen el mismo nombre, <b>CommandBars</b>(<paramref name="index" />) devuelve el primero. Para asegurarse de que devuelve el menú o submenú correcto, busque el control emergente que muestra dicho menú. A continuación, aplique el <see cref="P:Microsoft.Office.Core.CommandBarPopup.CommandBar" /> (propiedad) al control emergente para devolver la barra de comandos que representa dicho menú.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="378ea-102">
          <para>Use the <see cref="P:Microsoft.Office.Core.MsoEnvelopeClass.CommandBars" /> property to return the <b>CommandBars</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Core._CommandBars.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a new command bar to the collection.</para>
          <para>Use <b>CommandBars</b>(<paramref name="index" />) (Visual Basic.NET) or <b>CommandBars</b>[<paramref name="index" />] (C#), where <paramref name="index" /> is the name or index number of a command bar, to return a single <b>CommandBar</b> object.</para>
          <para>
            <b>Note</b>: You can use the name or index number to specify a menu bar or toolbar in the list of available menu bars and toolbars in the container application. However, you must use the name to specify a menu, shortcut menu, or submenu (all of which are represented by <b>CommandBar</b> objects). If two or more custom menus or submenus have the same name, <b>CommandBars</b>(<paramref name="index" />) returns the first one. To ensure that you return the correct menu or submenu, locate the pop-up control that displays that menu. Then apply the <see cref="P:Microsoft.Office.Core.CommandBarPopup.CommandBar" /> property to the pop-up control to return the command bar that represents that menu.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActionControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBarControl ActionControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBarControl ActionControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.ActionControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActionControl As CommandBarControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBarControl ^ ActionControl { Microsoft::Office::Core::CommandBarControl ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBarControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-103">Devuelve el <see cref="T:Microsoft.Office.Core.CommandBarControl" /> de objetos cuyas <see cref="P:Microsoft.Office.Core.CommandBarControl.OnAction" /> propiedad se establece en el procedimiento en ejecución.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-103">Returns the <see cref="T:Microsoft.Office.Core.CommandBarControl" /> object whose <see cref="P:Microsoft.Office.Core.CommandBarControl.OnAction" /> property is set to the running procedure.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-104">
            <para>Si no se inició el procedimiento en ejecución por un control de barra de comandos, esta propiedad devuelve <b>Nothing</b>.</para>
            <para>Llamar a esta propiedad y el <see cref="P:Microsoft.Office.Core.CommandBarControl.Tag" /> (propiedad) para determinar qué botón de barra de comandos anteriormente se hizo clic.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-104">
              <para>If the running procedure was not initiated by a command bar control, this property returns <b>Nothing</b>.</para>
              <para>Call this property and the <see cref="P:Microsoft.Office.Core.CommandBarControl.Tag" /> property to determine which command bar button was previously clicked.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As CommandBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBar ^ ActiveMenuBar { Microsoft::Office::Core::CommandBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-105">Devuelve un <see cref="T:Microsoft.Office.Core.CommandBar" /> object que representa la barra de menús activa de la aplicación contenedora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-105">Returns a <see cref="T:Microsoft.Office.Core.CommandBar" /> object that represents the active menu bar in the container application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdaptiveMenus">
      <MemberSignature Language="C#" Value="public bool AdaptiveMenus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdaptiveMenus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.AdaptiveMenus" />
      <MemberSignature Language="VB.NET" Value="Public Property AdaptiveMenus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdaptiveMenus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809363)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-106">Activa o desactiva el control de casilla de verificación para la opción para mostrar los menús de Microsoft Office como completa o personalizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-106">Checks or unchecks the check box control for the option to show menus in Microsoft Office as full or personalized.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-107">
            <para>Esta propiedad devuelve <b>True</b> si los menús adaptables están habilitados para todas las aplicaciones de Microsoft Office; <b>False</b> en caso contrario.</para>
            <para>Para establecer este control en cualquier aplicación, haga lo siguiente:</para>
            <list type="number">
              <item>
                <description>En el menú Herramientas, seleccione Personalizar.</description>
              </item>
              <item>
                <description>Seleccione la ficha Opciones.</description>
              </item>
              <item>
                <description>Siempre los Mostrar opción de los menús completos se encuentra en la sección menús y barras personalizadas.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-107">
              <para>This property returns <b>True</b> if adaptive menus are enabled for all applications in Microsoft Office; <b>False</b> otherwise.</para>
              <para>To set this control in any application, do the following:</para>
              <list type="number">
                <item>
                  <description>On the Tools menu, select Customize.</description>
                </item>
                <item>
                  <description>Select the Options tab.</description>
                </item>
                <item>
                  <description>The Always show full menus option is located in the Personalized Menus and Toolbars section.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBar Add (object Name, object Position, object MenuBar, object Temporary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CommandBar Add([in]object Name, [in]object Position, [in]object MenuBar, [in]object Temporary) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.Add(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Name As Object, Optional Position As Object, Optional MenuBar As Object, Optional Temporary As Object) As CommandBar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Position" Type="System.Object" />
        <Parameter Name="MenuBar" Type="System.Object" />
        <Parameter Name="Temporary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="378ea-108">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-108">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-109">Nombre de la nueva barra de comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-109">The name of the new command bar.</span>
          </span>
          <span data-ttu-id="378ea-110">Si se omite este argumento, se asignará un nombre predeterminado a la barra (por ejemplo, Custom 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-110">If this argument is omitted, a default name is assigned to the command bar (such as Custom 1).</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="378ea-111">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-112">La posición o el tipo de la nueva barra de comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-112">The position or type of the new command bar.</span>
          </span>
          <span data-ttu-id="378ea-113">Puede ser una de las <see cref="T:Microsoft.Office.Core.MsoBarPosition" /> constantes enumeran en la tabla siguiente. ConstantDescription<b>msoBarLeft</b>, <b>msoBarTop</b>, <b>msoBarRight</b>, <b>msoBarBottom</b>indica la izquierda, arriba, derecha y las coordenadas de la parte inferior de la nueva comando barra<b>msoBarFloating</b>indica que la nueva barra de comandos no se acoplada<b>msoBarPopup</b>indica que la nueva barra de comandos será un acceso directo menú<b>msoBarMenuBar para</b>Macintosh sólo</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-113">Can be one of the <see cref="T:Microsoft.Office.Core.MsoBarPosition" /> constants listed in the following table.ConstantDescription<b>msoBarLeft</b>, <b>msoBarTop</b>, <b>msoBarRight</b>, <b>msoBarBottom</b>Indicates the left, top, right, and bottom coordinates of the new command bar<b>msoBarFloating</b>Indicates that the new command bar won't be docked<b>msoBarPopup</b>Indicates that the new command bar will be a shortcut menu<b>msoBarMenuBar</b>Macintosh only</span>
          </span>
        </param>
        <param name="MenuBar">
          <span data-ttu-id="378ea-114">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-115">
            <b>True</b> para reemplazar la barra de menús activa con la nueva barra de comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-115">
              <b>True</b> to replace the active menu bar with the new command bar.</span>
          </span>
          <span data-ttu-id="378ea-116">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-116">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Temporary">
          <span data-ttu-id="378ea-117">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-117">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-118">
            <b>True</b> para que la nueva barra de comandos sea temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-118">
              <b>True</b> to make the new command bar temporary.</span>
          </span>
          <span data-ttu-id="378ea-119">Las barras de comandos temporales se eliminan cuando se cierra la aplicación contenedora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-119">Temporary command bars are deleted when the container application is closed.</span>
          </span>
          <span data-ttu-id="378ea-120">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-120">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-121">Crea una nueva barra de comandos y la agrega a la colección de barras de comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-121">Creates a new command bar and adds it to the collection of command bars.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEx">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBar AddEx (object TbidOrName, object Position, object MenuBar, object Temporary, object TbtrProtection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CommandBar AddEx([in]object TbidOrName, [in]object Position, [in]object MenuBar, [in]object Temporary, [in]object TbtrProtection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.AddEx(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEx (Optional TbidOrName As Object, Optional Position As Object, Optional MenuBar As Object, Optional Temporary As Object, Optional TbtrProtection As Object) As CommandBar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TbidOrName" Type="System.Object" />
        <Parameter Name="Position" Type="System.Object" />
        <Parameter Name="MenuBar" Type="System.Object" />
        <Parameter Name="Temporary" Type="System.Object" />
        <Parameter Name="TbtrProtection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TbidOrName">To be added.</param>
        <param name="Position">To be added.</param>
        <param name="MenuBar">To be added.</param>
        <param name="Temporary">To be added.</param>
        <param name="TbtrProtection">To be added.</param>
        <summary>
          <span data-ttu-id="378ea-122">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-122">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-123">Devuelve un objeto <b>Application</b> que representa la aplicación contenedora para el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-123">Returns an <b>Application</b> object that represents the container application for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitRenderingTransaction">
      <MemberSignature Language="C#" Value="public void CommitRenderingTransaction (int hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitRenderingTransaction([in]int32 hwnd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.CommitRenderingTransaction(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitRenderingTransaction (hwnd As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitRenderingTransaction(int hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hwnd">To be added.</param>
        <summary>
          <span data-ttu-id="378ea-p105">Confirma la transacción de representación. Devuelve el <b>valor Nothing</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-p105">Commits the rendering transaction. Returns <b>Nothing</b>.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809347)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-126">Devuelve o establece un valor <b>entero</b> que indica el número de elementos de la colección especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-126">Returns or sets an <b>Integer</b> value indicating the number of items in the specified collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-127">
            <para>El recuento incluye sólo las barras de menús, barras de herramientas y menús contextuales.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-127">
              <para>The count includes only menu bars, toolbars, and shortcut menus.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-128">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-128">Returns a 32-bit integer that indicates the application in which the specified object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-129">
            <para>Si el objeto especificado se creó en Microsoft Word, esta propiedad devuelve 1297307460, que representa la cadena "MSWD"; Si se creó en Microsoft Excel, esta propiedad devuelve 1480803660. Este valor también puede representarse mediante la constante <b>wdCreatorCode</b> en Word o <b>xlCreatorCode</b> en Excel.</para> Propiedad 
          <para>el <b>creador</b> principalmente se diseñó para usarse en Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Word tiene el código de creador MSWD. Para obtener información adicional acerca de esta propiedad, vea la referencia del lenguaje ayuda que se incluye con Microsoft Office Macintosh Edition.</para><para>El <b>creador</b> de la propiedad devuelve siempre el identificador numérico de la aplicación activa, tal como la propiedad <b>Application</b> devuelve siempre el nombre de la aplicación activa en forma de cadena. Utilice la propiedad <b>CreatedBy</b> de la <see cref="T:Microsoft.Office.Core.SharedWorkspaceFile" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceFolder" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceLink" />, y <see cref="T:Microsoft.Office.Core.SharedWorkspaceTask" /> objetos para devolver el nombre de la persona que creó dichos objetos. Utilice las propiedades de documento para devolver información acerca de los autores de los documentos de Office.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-129">
              <para>If the specified object was created in Microsoft Word, this property returns 1297307460, which represents the string "MSWD"; if created in Microsoft Excel, this property returns 1480803660. This value can also be represented by the constant <b>wdCreatorCode</b> in Word, or <b>xlCreatorCode</b> in Excel.</para>
              <para>The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code. For example, Microsoft Word has the creator code MSWD. For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</para>
              <para>The <b>Creator</b> property always returns the numeric identifier for the active application, just as the <b>Application</b> property always returns the name of the active application in string form. Use the <b>CreatedBy</b> property of the <see cref="T:Microsoft.Office.Core.SharedWorkspaceFile" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceFolder" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceLink" />, and <see cref="T:Microsoft.Office.Core.SharedWorkspaceTask" /> objects to return the name of the individual who created those objects. Use document properties to return information about the authors of Office documents.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableAskAQuestionDropdown">
      <MemberSignature Language="C#" Value="public bool DisableAskAQuestionDropdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableAskAQuestionDropdown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.DisableAskAQuestionDropdown" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableAskAQuestionDropdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableAskAQuestionDropdown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809371)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-130">Determina si está habilitado el menú desplegable del Asistente para Ayuda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-130">Determines if the Answer Wizard dropdown menu is enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-131">
            <para>El valor devuelto es <b>True</b> si está habilitado el menú desplegable del Asistente para Ayuda; <b>False</b> si deshabilitado.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-131">
              <para>The returned value is <b>True</b> if the Answer Wizard dropdown menu is enabled; <b>False</b> if disabled.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCustomize">
      <MemberSignature Language="C#" Value="public bool DisableCustomize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableCustomize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.DisableCustomize" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableCustomize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableCustomize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809369)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-132">Determina si está deshabilitada la personalización de la barra de herramientas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-132">Determines if toolbar customization is disabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-133">
            <para>El valor devuelto es <b>True</b> si está deshabilitada la personalización de la barra de herramientas; <b>False</b> si se habilita.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-133">
              <para>The returned value is <b>True</b> if toolbar customization is disabled; <b>False</b> if enabled.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFonts">
      <MemberSignature Language="C#" Value="public bool DisplayFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFonts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.DisplayFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFonts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809367)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-134">Determina si se muestran los nombres de fuentes en el cuadro fuente en sus fuentes actuales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-134">Determines if the font names in the Font box are displayed in their actual fonts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-135">
            <para>El valor devuelto es <b>True</b> si se muestran los nombres de fuentes en el cuadro fuente en la fuente real; <b>False</b> si no se muestran.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-135">
              <para>The returned value is <b>True</b> if the font names in the Font box are displayed in their actual fonts; <b>False</b> if they are not displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayKeysInTooltips">
      <MemberSignature Language="C#" Value="public bool DisplayKeysInTooltips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayKeysInTooltips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.DisplayKeysInTooltips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayKeysInTooltips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayKeysInTooltips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809350)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-136">Determina si las teclas de método abreviado se muestran en la información sobre herramientas para cada control de barra de comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-136">Determines if shortcut keys are displayed in the ToolTips for each command bar control.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-137">
            <para>El valor devuelto es <b>True</b> si se muestran teclas de método abreviado en la información sobre herramientas para cada control de barra de comandos; <b>False</b> si no se muestran.</para>
            <para>Para mostrar teclas de método abreviado en información sobre herramientas, debe establecer también la <see cref="P:Microsoft.Office.Core._CommandBars.DisplayTooltips" /> propiedad en <b>True</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-137">
              <para>The returned value is <b>True</b> if shortcut keys are displayed in the ToolTips for each command bar control; <b>False</b> if they are not displayed.</para>
              <para>To display shortcut keys in ToolTips, you must also set the <see cref="P:Microsoft.Office.Core._CommandBars.DisplayTooltips" /> property to <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayTooltips">
      <MemberSignature Language="C#" Value="public bool DisplayTooltips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayTooltips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.DisplayTooltips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayTooltips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayTooltips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-138">Determina si se muestra información en pantalla siempre que el usuario coloca el puntero sobre los controles de barra de comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-138">Determines if ScreenTips are displayed whenever the user positions the pointer over command bar controls.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-139">
            <para>El valor devuelto es <b>True</b> si se muestra información en pantalla siempre que el usuario coloca el puntero sobre los controles de la barra de comandos; <b>False</b> si no se muestran.</para>
            <para>Estableciendo la propiedad <b>DisplayTooltips</b> en una aplicación contenedora inmediatamente afecta a todas las barras de comandos en todas las aplicaciones de Microsoft Office que se está ejecutando y en todas las aplicaciones de Office que se abran después de establece la propiedad.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-139">
              <para>The returned value is <b>True</b> if ScreenTips are displayed whenever the user positions the pointer over command bar controls; <b>False</b> if they are not displayed.</para>
              <para>Setting the <b>DisplayTooltips</b> property in a container application immediately affects every command bar in every running Microsoft Office application, and in every Office application opened after the property is set.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMso">
      <MemberSignature Language="C#" Value="public void ExecuteMso (string idMso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteMso([in]string idMso) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.ExecuteMso(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteMso (idMso As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteMso(System::String ^ idMso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idMso" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="idMso">
          <span data-ttu-id="378ea-140">Identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-140">Identifier for the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-141">Ejecuta el control identificado mediante el <paramref name="idMso" /> parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-141">Executes the control identified by the <paramref name="idMso" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="378ea-142">
            <para>
              <b>Nota</b>: el Ayudante de Office de Microsoft ha quedado obsoleto en la versión 2007 de Microsoft Office system.</para>
            <para>Este método es útil en los casos donde no hay ningún modelo de objetos para un comando determinado. Funciona en los controles que son botones integrados, toggleButtons y splitButtons. En caso de error, devuelve <b>E_InvalidArg</b> para no es válida <paramref name="idMso" />y <b>E_Fail</b> para los controles que no están habilitados o no visible.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-142">
              <para>
                <b>Note</b>: The Microsoft Office Assistant has been deprecated in the 2007 release of the Microsoft Office system.</para>
              <para>This method is useful in cases where there is no object model for a particular command. Works on controls that are built-in buttons, toggleButtons and splitButtons. On failure it returns <b>E_InvalidArg</b> for an invalid <paramref name="idMso" />, and <b>E_Fail</b> for controls that are not enabled or not visible.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBarControl FindControl (object Type, object Id, object Tag, object Visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CommandBarControl FindControl([in]object Type, [in]object Id, [in]object Tag, [in]object Visible) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.FindControl(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindControl (Optional Type As Object, Optional Id As Object, Optional Tag As Object, Optional Visible As Object) As CommandBarControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809352)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBarControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Id" Type="System.Object" />
        <Parameter Name="Tag" Type="System.Object" />
        <Parameter Name="Visible" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="378ea-143">Opcional <see cref="T:Microsoft.Office.Core.MsoControlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-143">Optional <see cref="T:Microsoft.Office.Core.MsoControlType" />.</span>
          </span>
          <span data-ttu-id="378ea-144">Tipo de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-144">The type of control.</span>
          </span>
        </param>
        <param name="Id">
          <span data-ttu-id="378ea-145">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-145">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-146">Identificador del control que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-146">The identifier of the control.</span>
          </span>
        </param>
        <param name="Tag">
          <span data-ttu-id="378ea-147">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-147">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-148">El valor de rótulo del control que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-148">The tag value of the control.</span>
          </span>
        </param>
        <param name="Visible">
          <span data-ttu-id="378ea-149">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-149">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-150">
            <b>True</b> para incluir sólo controles de barra de comandos visibles en la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-150">
              <b>True</b> to include only visible command bar controls in the search.</span>
          </span>
          <span data-ttu-id="378ea-151">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-151">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="378ea-152">Barras de comandos visibles incluyen todas las barras de herramientas visibles y cualquier menú que se abra en el momento en que se ejecuta el método <b>FindControl</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-152">Visible command bars include all visible toolbars and any menus that are open at the time the <b>FindControl</b> method is executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-153">Devuelve un <see cref="T:Microsoft.Office.Core.CommandBarControl" /> objeto que cumple los criterios especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-153">Returns a <see cref="T:Microsoft.Office.Core.CommandBarControl" /> object that fits the specified criteria.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="378ea-154">
            <para>Si el <see cref="T:Microsoft.Office.Core.CommandBars" /> colección contiene dos o más controles que cumplen los criterios de búsqueda, <b>FindControl</b> devuelve el primer control que se encuentra. Si no se encuentra ningún control que cumpla los criterios, <b>FindControl</b> devuelve <b>Nothing</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-154">
              <para>If the <see cref="T:Microsoft.Office.Core.CommandBars" /> collection contains two or more controls that fit the search criteria, <b>FindControl</b> returns the first control that's found. If no control that fits the criteria is found, <b>FindControl</b> returns <b>Nothing</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindControls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBarControls FindControls (object Type, object Id, object Tag, object Visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.CommandBarControls FindControls([in]object Type, [in]object Id, [in]object Tag, [in]object Visible) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.FindControls(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindControls (Optional Type As Object, Optional Id As Object, Optional Tag As Object, Optional Visible As Object) As CommandBarControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809365)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBarControls</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Id" Type="System.Object" />
        <Parameter Name="Tag" Type="System.Object" />
        <Parameter Name="Visible" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="378ea-155">Opcional <see cref="T:Microsoft.Office.Core.MsoControlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-155">Optional <see cref="T:Microsoft.Office.Core.MsoControlType" />.</span>
          </span>
          <span data-ttu-id="378ea-156">Tipo de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-156">The type of control.</span>
          </span>
        </param>
        <param name="Id">
          <span data-ttu-id="378ea-157">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-158">El identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-158">The control’s identifier.</span>
          </span>
        </param>
        <param name="Tag">
          <span data-ttu-id="378ea-159">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-159">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-160">El valor del control etiqueta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-160">The control’s tag value.</span>
          </span>
        </param>
        <param name="Visible">
          <span data-ttu-id="378ea-161">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-162">
            <b>True</b> para incluir sólo controles de barra de comandos visibles en la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-162">
              <b>True</b> to include only visible command bar controls in the search.</span>
          </span>
          <span data-ttu-id="378ea-163">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-163">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-164">Devuelve el <see cref="T:Microsoft.Office.Core.CommandBarControls" /> colección que cumple los criterios especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-164">Returns the <see cref="T:Microsoft.Office.Core.CommandBarControls" /> collection that fits the specified criteria.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="378ea-165">
            <para>Si no se encuentra ningún control que cumplen los criterios, el método <b>FindControls</b> devuelve <b>Nothing</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-165">
              <para>If no controls that fit the criteria are found, the <b>FindControls</b> method returns <b>Nothing</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledMso">
      <MemberSignature Language="C#" Value="public bool GetEnabledMso (string idMso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabledMso([in]string idMso) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.GetEnabledMso(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnabledMso (idMso As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetEnabledMso(System::String ^ idMso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809374)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idMso" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="idMso">
          <span data-ttu-id="378ea-166">Identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-166">Identifier for the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-167">Devuelve <b>True</b> si el control identificado mediante el <paramref name="idMso" /> parámetro está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-167">Returns <b>True</b> if the control identified by the <paramref name="idMso" /> parameter  is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="378ea-168">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-168">
              <b>Boolean</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageMso">
      <MemberSignature Language="C#" Value="public stdole.IPictureDisp GetImageMso (string idMso, int Width, int Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class stdole.IPictureDisp GetImageMso([in]string idMso, [in]int32 Width, [in]int32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.GetImageMso(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImageMso (idMso As String, Width As Integer, Height As Integer) As IPictureDisp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; stdole::IPictureDisp ^ GetImageMso(System::String ^ idMso, int Width, int Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.IPictureDisp</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.InteropServices.ComAliasName("stdole.IPictureDisp")</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idMso" Type="System.String" />
        <Parameter Name="Width" Type="System.Int32" />
        <Parameter Name="Height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="idMso">
          <span data-ttu-id="378ea-169">Identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-169">Identifier for the control.</span>
          </span>
        </param>
        <param name="Width">
          <span data-ttu-id="378ea-170">Ancho de la imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-170">The width of the image.</span>
          </span>
        </param>
        <param name="Height">
          <span data-ttu-id="378ea-171">Alto de la imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-171">The height of the image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-172">Devuelve un objeto <b>IPictureDisp</b> de la imagen del control identificada mediante el <paramref name="idMso" /> parámetro escalada a las dimensiones especificadas por el ancho y alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-172">Returns an <b>IPictureDisp</b> object of the control image identified by the <paramref name="idMso" /> parameter  scaled to the dimensions specified by width and height.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="378ea-173">IPictureDisp</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-173">IPictureDisp</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="378ea-174">
            <para>El <paramref name="Width" /> y <paramref name="Height" /> parámetros deben estar comprendido entre 16 y 128.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-174">
              <para>The <paramref name="Width" /> and <paramref name="Height" /> parameters must be between 16 and 128.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabelMso">
      <MemberSignature Language="C#" Value="public string GetLabelMso (string idMso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLabelMso([in]string idMso) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.GetLabelMso(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLabelMso (idMso As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLabelMso(System::String ^ idMso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idMso" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="idMso">
          <span data-ttu-id="378ea-175">Identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-175">Identifier for the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-176">Devuelve la etiqueta del control identificado mediante el <paramref name="idMso" /> parámetro como una <b>cadena</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-176">Returns the label of the control identified by the <paramref name="idMso" /> parameter as a <b>String</b>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="378ea-177">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-177">
              <b>String</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPressedMso">
      <MemberSignature Language="C#" Value="public bool GetPressedMso (string idMso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPressedMso([in]string idMso) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.GetPressedMso(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPressedMso (idMso As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPressedMso(System::String ^ idMso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idMso" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="idMso">
          <span data-ttu-id="378ea-178">Identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-178">Identifier for the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-179">Devuelve un valor que indica si el control toggleButton identificado mediante el <paramref name="idMso" /> parámetro se encuentra presionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-179">Returns a value indicating whether the toggleButton control identified by the <paramref name="idMso" /> parameter  is pressed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="378ea-180">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-180">
              <b>Boolean</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScreentipMso">
      <MemberSignature Language="C#" Value="public string GetScreentipMso (string idMso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetScreentipMso([in]string idMso) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.GetScreentipMso(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScreentipMso (idMso As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetScreentipMso(System::String ^ idMso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idMso" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="idMso">
          <span data-ttu-id="378ea-181">Identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-181">Identifier for the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-182">Devuelve la información en pantalla del control identificado por la <paramref name="idMso" /> parámetro como una <b>cadena</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-182">Returns the screentip of the control identified by the <paramref name="idMso" /> parameter as a <b>String</b>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="378ea-183">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-183">
              <b>String</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupertipMso">
      <MemberSignature Language="C#" Value="public string GetSupertipMso (string idMso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSupertipMso([in]string idMso) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.GetSupertipMso(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupertipMso (idMso As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSupertipMso(System::String ^ idMso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idMso" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="idMso">
          <span data-ttu-id="378ea-184">Identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-184">Identifier for the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-185">Devuelve la sugerencia del control identificado mediante el <paramref name="idMso" /> parámetro como una <b>cadena</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-185">Returns the supertip of the control identified by the <paramref name="idMso" /> parameter as a <b>String</b>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="378ea-186">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-186">
              <b>String</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisibleMso">
      <MemberSignature Language="C#" Value="public bool GetVisibleMso (string idMso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetVisibleMso([in]string idMso) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.GetVisibleMso(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVisibleMso (idMso As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetVisibleMso(System::String ^ idMso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idMso" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="idMso">
          <span data-ttu-id="378ea-187">Identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-187">Identifier for the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-188">Devuelve <b>True</b> si el control identificado mediante el <paramref name="idMso" /> parámetro está visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-188">Returns <b>True</b> if the control identified by the <paramref name="idMso" /> parameter is visible.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="378ea-189">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-189">
              <b>Boolean</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdsString">
      <MemberSignature Language="C#" Value="public int IdsString[int ids, out string pbstrName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IdsString(int32, string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.IdsString(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdsString(ids As Integer, ByRef pbstrName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IdsString[int, System::String ^ %] { int get(int ids, [Runtime::InteropServices::Out] System::String ^ % pbstrName); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ids" Type="System.Int32" />
        <Parameter Name="pbstrName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ids">To be added.</param>
        <param name="pbstrName">To be added.</param>
        <summary>
          <span data-ttu-id="378ea-190">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-190">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBar this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBar Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As CommandBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBar ^ default[System::Object ^] { Microsoft::Office::Core::CommandBar ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="378ea-191">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-191">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="378ea-192">Nombre o número de índice del objeto que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-192">The name or index number of the object to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="378ea-193">Devuelve un <see cref="T:Microsoft.Office.Core.CommandBar" /> objeto desde el <see cref="T:Microsoft.Office.Core.CommandBars" /> colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-193">Returns a <see cref="T:Microsoft.Office.Core.CommandBar" /> object from the <see cref="T:Microsoft.Office.Core.CommandBars" /> collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809354)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-194">Determina si los botones de la barra de herramientas que se muestra son mayores que el tamaño normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-194">Determines if the toolbar buttons displayed are larger than normal size.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="378ea-195">
            <para>El valor devuelto es <b>True</b> si los botones de la barra de herramientas que se muestra son mayores de tamaño normal; <b>False</b> si son más pequeños.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-195">
              <para>The returned value is <b>True</b> if the toolbar buttons displayed are larger than normal size; <b>False</b> if they are smaller.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuAnimationStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoMenuAnimation MenuAnimationStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoMenuAnimation MenuAnimationStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.MenuAnimationStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MenuAnimationStyle As MsoMenuAnimation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoMenuAnimation MenuAnimationStyle { Microsoft::Office::Core::MsoMenuAnimation get(); void set(Microsoft::Office::Core::MsoMenuAnimation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809356)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoMenuAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-196">Devuelve o establece la forma que se anima una barra de comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-196">Returns or sets the way a command bar is animated.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809359)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809359)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="378ea-197">Devuelve el objeto primario del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-197">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseFocus">
      <MemberSignature Language="C#" Value="public void ReleaseFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseFocus() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core._CommandBars.ReleaseFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809360)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="378ea-198">Libera el foco de la interfaz de usuario de todas las barras de comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-198">Releases the user interface focus from all command bars.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TmcGetName">
      <MemberSignature Language="C#" Value="public int TmcGetName[int tmc, out string pbstrName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TmcGetName(int32, string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core._CommandBars.TmcGetName(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TmcGetName(tmc As Integer, ByRef pbstrName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TmcGetName[int, System::String ^ %] { int get(int tmc, [Runtime::InteropServices::Out] System::String ^ % pbstrName); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tmc" Type="System.Int32" />
        <Parameter Name="pbstrName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tmc">To be added.</param>
        <param name="pbstrName">To be added.</param>
        <summary>
          <span data-ttu-id="378ea-199">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="378ea-199">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>