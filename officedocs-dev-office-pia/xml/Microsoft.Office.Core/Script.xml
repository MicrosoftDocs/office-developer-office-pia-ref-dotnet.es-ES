<Type Name="Script" FullName="Microsoft.Office.Core.Script">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2140b9d9200bd6144f2a36ebdceefe33a91ca36c" />
    <Meta Name="ms.sourcegitcommit" Value="f41bc3cdd2c00b9a51a4340ac823a9e309633924" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20663547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Script : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Script implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core.Script" />
  <TypeSignature Language="VB.NET" Value="Public Interface Script&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class Script : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C0341-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4304)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b28d4-101">Representa un bloque de secuencias de comandos HTML en un documento de Microsoft Word, en una hoja de cálculo de Microsoft Excel o en una diapositiva de Microsoft PowerPoint.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b28d4-101">Represents a block of HTML script in a Microsoft Word document, on a Microsoft Excel spreadsheet, or on a Microsoft PowerPoint slide.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="b28d4-102">
        <para>El objeto <b>Script</b> es un miembro de la <see cref="T:Microsoft.Office.Core.Scripts" /> colección.</para>
        <para>Uso <b>Scripts.Item</b>(<paramref name="index" />), donde <paramref name="index" /> es el nombre, el identificador o el número de índice de una secuencia de comandos, para devolver un solo objeto <b>Script</b> . Cada objeto <b>Script</b> se identifica con el <see cref="P:Microsoft.Office.Core.Script.Id" /> (propiedad), que proporciona un nombre adecuado que puede utilizar para tener acceso a la secuencia de comandos</para>
        <para>Puede especificar el lenguaje de scripting utilizado en la secuencia de comandos cambiando el <see cref="P:Microsoft.Office.Core.Script.Language" /> (propiedad).</para>
        <para>Puede comprobar la ubicación de la forma del delimitador de secuencia de comandos dentro de un documento HTML utilizando la <see cref="P:Microsoft.Office.Core.Script.Location" /> (propiedad).</para>
        <para>Puede comprobar o establecer los atributos agregados a la &lt;secuencia de comandos&gt; etiqueta (a excepción de los atributos ID y LANGUAGE) mediante el uso de la <see cref="P:Microsoft.Office.Core.Script.Extended" /> (propiedad).</para>
        <para>Puede comprobar o establecer el texto de secuencia de comandos asociado con una secuencia de comandos determinada mediante el uso de la <see cref="P:Microsoft.Office.Core.Script.ScriptText" /> (propiedad).</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="b28d4-102">
          <para>The <b>Script</b> object is a member of the <see cref="T:Microsoft.Office.Core.Scripts" /> collection.</para>
          <para>Use <b>Scripts.Item</b>(<paramref name="index" />), where <paramref name="index" /> is the name, ID, or index number of a script, to return a single <b>Script</b> object. Each <b>Script</b> object is identified by the <see cref="P:Microsoft.Office.Core.Script.Id" /> property, which provides a convenient name you can use to access the script.</para>
          <para>You can specify the scripting language used in the script by changing the <see cref="P:Microsoft.Office.Core.Script.Language" /> property.</para>
          <para>You can check the location of the script anchor shape within an HTML document by using the <see cref="P:Microsoft.Office.Core.Script.Location" /> property.</para>
          <para>You can check or set attributes added to the &lt;SCRIPT&gt; tag (with the exception of the LANGUAGE and ID attributes) by using the <see cref="P:Microsoft.Office.Core.Script.Extended" /> property.</para>
          <para>You can check or set the script text associated with a given script by using the <see cref="P:Microsoft.Office.Core.Script.ScriptText" /> property.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Script.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-103">Devuelve un objeto <b>Application</b> que representa la aplicación contenedora para el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-103">Returns an <b>Application</b> object that represents the container application for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Script.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-104">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-104">Returns a 32-bit integer that indicates the application in which the specified object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b28d4-105">
            <para>Si el objeto especificado se creó en Microsoft Word, esta propiedad devuelve 1297307460, que representa la cadena MSWD; Si se creó en Microsoft Excel, esta propiedad devuelve 1480803660. Este valor también puede representarse mediante la constante <b>wdCreatorCode</b> en Word o <b>xlCreatorCode</b> en Excel.</para> Propiedad 
          <para>el <b>creador</b> principalmente se diseñó para usarse en Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Word tiene el código de creador MSWD. Para obtener información adicional acerca de esta propiedad, vea la referencia del lenguaje ayuda que se incluye con Microsoft Office Macintosh Edition.</para><para>El <b>creador</b> de la propiedad devuelve siempre el identificador numérico de la aplicación activa, al igual que el <see cref="P:Microsoft.Office.Core.Script.Application" /> propiedad siempre devuelve el nombre de la aplicación activa en forma de cadena. Utilice la propiedad <b>CreatedBy</b> de la <see cref="T:Microsoft.Office.Core.SharedWorkspaceFile" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceFolder" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceLink" />, y <see cref="T:Microsoft.Office.Core.SharedWorkspaceTask" /> objetos para devolver el nombre de la persona que creó dichos objetos. Utilice las propiedades de documento para devolver información acerca de los autores de los documentos de Office.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-105">
              <para>If the specified object was created in Microsoft Word, this property returns 1297307460, which represents the string MSWD; if created in Microsoft Excel, this property returns 1480803660. This value can also be represented by the constant <b>wdCreatorCode</b> in Word, or <b>xlCreatorCode</b> in Excel.</para>
              <para>The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code. For example, Microsoft Word has the creator code MSWD. For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</para>
              <para>The <b>Creator</b> property always returns the numeric identifier for the active application, just as the <see cref="P:Microsoft.Office.Core.Script.Application" /> property always returns the name of the active application in string form. Use the <b>CreatedBy</b> property of the <see cref="T:Microsoft.Office.Core.SharedWorkspaceFile" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceFolder" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceLink" />, and <see cref="T:Microsoft.Office.Core.SharedWorkspaceTask" /> objects to return the name of the individual who created those objects. Use document properties to return information about the authors of Office documents.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.Script.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809352)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-106">Elimina el objeto especificado de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-106">Deletes the specified object from the collection.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="b28d4-107">
            <para>Para el <see cref="T:Microsoft.Office.Core.Scripts" /> colección, utilizando el método <b>Delete</b> quita todos los scripts desde el documento de Microsoft Word especificado, hoja de cálculo de Microsoft Excel o diapositiva de Microsoft PowerPoint. Un delimitador de secuencia de comandos está representado por una forma en la aplicación host. Por lo tanto, el objeto <b>Shape</b> asociado a cada delimitador de secuencia de comandos del tipo <b>msoScriptAnchor</b> se elimina de la colección <b>Shapes</b> en Excel y PowerPoint y de las colecciones <b>InlineShapes</b> y <b>las formas</b> en Word.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-107">
              <para>For the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, using the <b>Delete</b> method removes all scripts from the specified Microsoft Word document, Microsoft Excel worksheet, or Microsoft PowerPoint slide. A script anchor is represented by a shape in the host application. Therefore, the <b>Shape</b> object associated with each script anchor of type <b>msoScriptAnchor</b> is deleted from the <b>Shapes</b> collection in Excel and PowerPoint and from the <b>InlineShapes</b> and <b>Shapes</b> collections in Word.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extended">
      <MemberSignature Language="C#" Value="public string Extended { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Extended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Script.Extended" />
      <MemberSignature Language="VB.NET" Value="Public Property Extended As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Extended { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-108">Devuelve o establece los atributos agregados a la &lt;secuencia de comandos&gt; etiqueta, a excepción de los atributos ID y LANGUAGE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-108">Returns or sets attributes added to the &lt;SCRIPT&gt; tag, with the exception of the LANGUAGE and ID attributes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b28d4-109">
            <para>Los atributos están separados por espacios, al igual que ocurre en HTML. No se puede pasar el atributo LANGUAGE o el atributo ID utilizando la propiedad <b>Extended</b> .</para>
            <para>La aplicación Microsoft Office host no proporciona un medio para comprobar la sintaxis de los atributos pasados.</para>
            <para>Si pasa el atributo LANGUAGE en la propiedad <b>Extended</b> , la &lt;secuencia de comandos&gt; etiqueta recibe dos opciones de idioma, lo que provoca un conflicto.</para>
            <para>Si pasa un atributo ID en la propiedad <b>Extended</b> y no se ha establecido ID a través de uno el parámetro ID de la <see cref="M:Microsoft.Office.Core.Scripts.Add(System.Object,Microsoft.Office.Core.MsoScriptLocation,Microsoft.Office.Core.MsoScriptLanguage,System.String,System.String,System.String)" /> método o el <see cref="P:Microsoft.Office.Core.Script.Id" /> (propiedad) de la <see cref="T:Microsoft.Office.Core.Script" /> de objeto, el identificador se exportará correctamente.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-109">
              <para>Attributes are separated by spaces, the same as in HTML. You cannot pass the LANGUAGE attribute or the ID attribute by using the <b>Extended</b> property.</para>
              <para>The Microsoft Office host application doesn’t provide any means of checking the syntax of passed attributes.</para>
              <para>If you pass the LANGUAGE attribute in the <b>Extended</b> property, the &lt;SCRIPT&gt; tag receives two language settings, which causes a conflict.</para>
              <para>If you pass an ID attribute in the <b>Extended</b> property and no ID has been set through either the ID parameter of the <see cref="M:Microsoft.Office.Core.Scripts.Add(System.Object,Microsoft.Office.Core.MsoScriptLocation,Microsoft.Office.Core.MsoScriptLanguage,System.String,System.String,System.String)" /> method or the <see cref="P:Microsoft.Office.Core.Script.Id" /> property of the <see cref="T:Microsoft.Office.Core.Script" /> object, the ID is exported correctly.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Script.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809347)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-110">Devuelve o establece el identificador de un <see cref="T:Microsoft.Office.Core.Script" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-110">Returns or sets the ID of a <see cref="T:Microsoft.Office.Core.Script" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b28d4-111">
            <para>El identificador devuelto es el atributo ID de la &lt;secuencia de comandos&gt; etiqueta en HTML. Si no hay ningún atributo de identificador especificado en el &lt;secuencia de comandos&gt; etiqueta, la propiedad <b>Id</b> devuelve una cadena vacía.</para>
            <para>
              <b>Id</b> especifica un identificador SGML utilizado para los elementos de nomenclatura. Identificadores válidos incluyen cualquier cadena que comience con una letra y está compuesta por caracteres alfanuméricos; la cadena también puede incluir el carácter de subrayado (_).</para>
            <para>El identificador debe ser único dentro del documento HTML.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-111">
              <para>The ID returned is the ID attribute of the &lt;SCRIPT&gt; tag in HTML. If there’s no ID attribute specified in the &lt;SCRIPT&gt; tag, the <b>Id</b> property returns an empty string.</para>
              <para>
                <b>Id</b> specifies an SGML identifier used for naming elements. Valid identifiers include any string that begins with a letter and is composed of alphanumeric characters; the string can also include the underscore character ( _ ).</para>
              <para>The ID must be unique within the HTML document.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoScriptLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoScriptLanguage Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Script.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As MsoScriptLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoScriptLanguage Language { Microsoft::Office::Core::MsoScriptLanguage get(); void set(Microsoft::Office::Core::MsoScriptLanguage value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610809349)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoScriptLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-112">Devuelve o establece el lenguaje de secuencias de comandos de la secuencia de comandos activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-112">Returns or sets the scripting language of the active script.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b28d4-113">
            <para>El <see cref="T:Microsoft.Office.Core.MsoScriptLanguage" /> constantes usadas con la propiedad <b>Language</b> también se usan en el <paramref name="Language" /> parámetro en el <see cref="M:Microsoft.Office.Core.Scripts.Add(System.Object,Microsoft.Office.Core.MsoScriptLocation,Microsoft.Office.Core.MsoScriptLanguage,System.String,System.String,System.String)" /> (método) de la <see cref="T:Microsoft.Office.Core.Scripts" /> colección.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-113">
              <para>The <see cref="T:Microsoft.Office.Core.MsoScriptLanguage" /> constants used with the <b>Language</b> property are also used in the <paramref name="Language" /> parameter in the <see cref="M:Microsoft.Office.Core.Scripts.Add(System.Object,Microsoft.Office.Core.MsoScriptLocation,Microsoft.Office.Core.MsoScriptLanguage,System.String,System.String,System.String)" /> method of the <see cref="T:Microsoft.Office.Core.Scripts" /> collection.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoScriptLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoScriptLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Script.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As MsoScriptLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoScriptLocation Location { Microsoft::Office::Core::MsoScriptLocation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809351)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoScriptLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-114">Devuelve la ubicación del delimitador de secuencia de comandos en el documento HTML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-114">Returns the location of the script anchor in the specified HTML document.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b28d4-115">
            <para>Las etiquetas de secuencia de comandos en un documento HTML pueden aparecer en cualquier lugar entre la &lt;HTML&gt; las etiquetas en el documento. En Microsoft Word, Excel o PowerPoint, sólo los delimitadores de secuencia de comandos que se encuentran entre el &lt;cuerpo&gt; etiquetas están visibles. La secuencia de comandos HTML adicional que aparece antes o después de la &lt;cuerpo&gt; se almacena en las etiquetas, pero no es visibles para el usuario.</para>
            <para>La <see cref="T:Microsoft.Office.Core.Scripts" /> colección contiene todos los delimitadores de secuencia de comandos que aparecen en el documento, desde dentro o fuera del texto principal del documento. Con el <paramref name="Location" /> argumento de la <see cref="M:Microsoft.Office.Core.Scripts.Add(System.Object,Microsoft.Office.Core.MsoScriptLocation,Microsoft.Office.Core.MsoScriptLanguage,System.String,System.String,System.String)" /> (método), puede insertar los delimitadores de secuencia de comandos dentro de la &lt;HEAD&gt; y &lt;cuerpo&gt; las etiquetas en el documento HTML. También puede utilizar la propiedad <b>Location</b> para determinar donde se almacena un delimitador de secuencia de comandos determinado dentro del documento.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-115">
              <para>Script tags in an HTML document can appear anywhere between the &lt;HTML&gt; tags in the document. In Microsoft Word, Excel, or PowerPoint, only the script anchors located between the &lt;BODY&gt; tags are visible. Additional HTML script that appears before or after the &lt;BODY&gt; tags is stored in but isn’t visible to the user.</para>
              <para>The <see cref="T:Microsoft.Office.Core.Scripts" /> collection contains all of the script anchors that appear in the document, whether inside or outside of the main body of the document. Using the <paramref name="Location" /> argument of the <see cref="M:Microsoft.Office.Core.Scripts.Add(System.Object,Microsoft.Office.Core.MsoScriptLocation,Microsoft.Office.Core.MsoScriptLanguage,System.String,System.String,System.String)" /> method, you can insert script anchors within the &lt;HEAD&gt; and &lt;BODY&gt; tags in the HTML document. You can also use the <b>Location</b> property to determine where a particular script anchor is stored within the document.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Script.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-116">Devuelve el objeto <b>primario</b> del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-116">Returns the <b>Parent</b> object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptText">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Script.ScriptText" />
      <MemberSignature Language="VB.NET" Value="Default Public Property ScriptText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-117">Devuelve o establece el texto contenido en un bloque de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-117">Returns or sets the text contained in a block of script.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b28d4-118">
            <para>La aplicación host de Microsoft Office no comprueba la sintaxis de la secuencia de comandos. La propiedad <b>ScriptText</b> es la propiedad predeterminada de la <see cref="T:Microsoft.Office.Core.Script" /> objeto.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-118">
              <para>The Microsoft Office host application doesn’t check the syntax of the script. The <b>ScriptText</b> property is the default property for the <see cref="T:Microsoft.Office.Core.Script" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public object Shape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Shape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Script.Shape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shape As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Shape { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809353)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809353)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d4-119">Devuelve un objeto <b>Shape</b> o un objeto <b>InlineShape</b> , dependiendo de la aplicación host de Microsoft Office.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-119">Returns a <b>Shape</b> object or <b>InlineShape</b> object, depending on the Microsoft Office host application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b28d4-120">
            <para>La propiedad <b>Shape</b> devuelve un objeto <b>Shape</b> en Microsoft Excel y PowerPoint. En Word, la <b>forma</b> (propiedad) devuelve un objeto <b>Shape</b> si el delimitador de secuencia de comandos es flotante; Sin embargo, si se trata de un delimitador entre líneas, esta propiedad devuelve un objeto <b>InlineShape</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d4-120">
              <para>The <b>Shape</b> property returns a <b>Shape</b> object in Microsoft Excel and PowerPoint. In Word, the <b>Shape</b> property returns a <b>Shape</b> object if the script anchor is floating; if it’s an inline anchor, however, this property returns an <b>InlineShape</b> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>